name: Rust

on:
  push:
  #  pull_request:
  workflow_dispatch:
  schedule:
    - cron: 0 5,17 * * *

env:
  CARGO_TERM_COLOR: always

jobs:

  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt, clippy, llvm-tools-preview, rust-src
      - name: Add build target
        run: |
          rustup target add x86_64-unknown-none
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y xorriso
      - name: Rustfmt
        run: |
          cargo fmt -- --check
      - name: Clippy
        run: |
          cargo clippy -- -D clippy::all

  test:
    name: "Test"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        strategy: [ debug, release ]
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y xorriso
      - name: Test
        run: |
          cargo test $(if [[ "${{ matrix.strategy }}" == "release" ]]; then echo "--release"; fi)

  prepare-miri:
    name: "Prepare Miri"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          export PACKAGES=$(ls kernel/crates | jq -Rsc 'split("\n")')
          echo "::set-output name=matrix::{\"package\":${PACKAGES}}"
    
  miri:
    name: "Miri"
    runs-on: ubuntu-latest
    needs: prepare-miri
    strategy:
      matrix: ${{fromJson(needs.prepare-miri.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Miri Setup
        run: |
          cargo miri setup
      - name: Miri
        run: |
          cargo miri test -p ${{ matrix.package }}
  
  

  build:
    name: "Build and upload artifacts"
    runs-on: ubuntu-latest
    needs:
      - test
      - miri
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y xorriso
      - name: Build
        run: |
          cargo build --release
      - uses: actions/upload-artifact@v4
        with:
          name: muffin-boot-images
          path: |
            target/release/build/**/out/muffin.iso
